name: Build, create and publish the main container image

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
    IMAGE_NAME: ${{ github.repository }}
    IMAGE_TAGS: latest ${{ github.sha }}
    IMAGE_REGISTRY: ghcr.io
    REGISTRY_USER: ${{ github.actor }}
    REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    CGO_ENABLED: 0

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - "1.23"
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
#      - name: Get tags
#        run: git fetch --prune --unshallow
      - name: Show tags
        run: git describe --tags --match v[0-9]* --abbrev=0
      - name: Git branch --show-current
        run: git branch --show-current
      - name: Git rev-parse
        run: git rev-parse --abbrev-ref HEAD
      - name: GH env
        run: env
      - name: Generate
        run: go generate ./...
      - name: Show generated version info
        run: cat rinser/version.gen.go
      - name: Build normal executable
        run: go build -v .
      - name: Build debug executable 
        run: go build -v -tags debug -o rinse-debug .
      - name: Build container image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          containerfiles: |
            ./Containerfile
          oci: true
      - name: Push image to ghcr.io
        id: push_image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust
